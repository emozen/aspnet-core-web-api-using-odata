// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OData.WebApi.Data;

namespace OData.WebApi.Data.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    [Migration("20190720201751_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("OData.WebApi.Data.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CategoryId");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<decimal>("Price");

                    b.Property<string>("ProductName");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.Property<double>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = new Guid("28084f89-0afa-4b66-8964-12fe25f4b894"),
                            CategoryId = new Guid("a65bc1ae-c1c7-4c20-8b3b-4b48490d3fb0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "HP Zbook Laptop",
                            Price = 2000m,
                            ProductName = "HP Zbook",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 3.0
                        },
                        new
                        {
                            Id = new Guid("234f7621-6348-422d-880a-a601045a0f0a"),
                            CategoryId = new Guid("a65bc1ae-c1c7-4c20-8b3b-4b48490d3fb0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "MacBook Laptop",
                            Price = 3000m,
                            ProductName = "MacBook Pro",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 2.1000000000000001
                        },
                        new
                        {
                            Id = new Guid("6e183fc1-c770-4b3b-abde-5f0c1ed5a418"),
                            CategoryId = new Guid("a65bc1ae-c1c7-4c20-8b3b-4b48490d3fb0"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Lenovo Thinkpad Laptop",
                            Price = 2800m,
                            ProductName = "Lenovo Thinkpad",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 1.7
                        },
                        new
                        {
                            Id = new Guid("119cfc7e-37ce-450e-87ba-a3f2dd47f7f1"),
                            CategoryId = new Guid("8b726886-e719-413c-a125-939ee5af387d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "LG 32-Inch 720p LED TV",
                            Price = 12000m,
                            ProductName = "LG 32-Inch",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 60.0
                        },
                        new
                        {
                            Id = new Guid("ce86bf01-3875-4dac-8918-d7328d439b2e"),
                            CategoryId = new Guid("8b726886-e719-413c-a125-939ee5af387d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sony 65-Inch 4K Ultra HD Smart LED TV",
                            Price = 10000m,
                            ProductName = "Sony 65-Inch",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 70.0
                        },
                        new
                        {
                            Id = new Guid("232f28e3-6fad-4ebd-9ea5-6c2ed48bf23e"),
                            CategoryId = new Guid("8b726886-e719-413c-a125-939ee5af387d"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Samsung 32-Inch 1080p Smart LED TV",
                            Price = 15000m,
                            ProductName = "Samsung 32-Inch",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 50.0
                        },
                        new
                        {
                            Id = new Guid("e0de4e9f-3b88-456c-a364-dd263a3aba84"),
                            CategoryId = new Guid("1236a458-0802-4340-bdd4-05859c9aaaad"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "JBL Tune 500BT On-Ear",
                            Price = 15m,
                            ProductName = "JBL Tune",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 0.29999999999999999
                        },
                        new
                        {
                            Id = new Guid("c547f38d-a4e0-4617-adfc-bf95aad7c2df"),
                            CategoryId = new Guid("1236a458-0802-4340-bdd4-05859c9aaaad"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Panasonic ErgoFit In-Ear",
                            Price = 29m,
                            ProductName = "Panasonic ErgoFit",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 0.40000000000000002
                        },
                        new
                        {
                            Id = new Guid("ddc4a52b-a9bc-4bf6-be11-699ae206a293"),
                            CategoryId = new Guid("1236a458-0802-4340-bdd4-05859c9aaaad"),
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Sennheiser CX Wireless In-Ear",
                            Price = 44m,
                            ProductName = "Sennheiser CX",
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Weight = 0.40000000000000002
                        });
                });

            modelBuilder.Entity("OData.WebApi.Data.Entities.ProductCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CategoryName");

                    b.Property<string>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("ProductCategory");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8b726886-e719-413c-a125-939ee5af387d"),
                            CategoryName = "TV",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("1236a458-0802-4340-bdd4-05859c9aaaad"),
                            CategoryName = "Headphones",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a65bc1ae-c1c7-4c20-8b3b-4b48490d3fb0"),
                            CategoryName = "Computers",
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UpdatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("OData.WebApi.Data.Entities.Product", b =>
                {
                    b.HasOne("OData.WebApi.Data.Entities.ProductCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
